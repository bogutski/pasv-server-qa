{
	"info": {
		"_postman_id": "c0d9d706-d074-4aca-86ae-2b986092964d",
		"name": "USER ADMIN (positive tests)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c2ee0059-375b-4dc4-8cc1-26283807f995",
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"pm.environment.set(\"token\", jsonData.token);",
							"",
							"pm.environment.set(\"userId\",jsonData.userId);",
							"",
							"pm.test(\"Status is correct\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Successful message is displayed\", () => {",
							"    pm.expect(jsonData.message.type) === \"success\";",
							"});",
							"",
							"pm.test(\"Token is displayed\", () => {",
							"    pm.expect(jsonData.token.length) !== 0;",
							"});",
							"",
							"pm.test(\"UserId is displayed\", () => {",
							"    pm.expect(jsonData.userId.length) !== 0;",
							"});",
							"",
							"pm.test(\"Response time is less than 5000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(5000);",
							"});",
							"",
							"pm.test(\"Email is correct\", () => {",
							"    pm.expect(jsonData.user.email).to.match(/[a-z0-9!#$%&â€˜+/=?^{|}~-]+(?:\\.[a-z0-9!#$%&'+/=?^{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/);",
							"});",
							"",
							"pm.test(\"User name is correct\", () => {",
							"    pm.expect(jsonData.user.name).to.match(/^[A-Z][a-z]{1,15}\\s[A-Z][a-z]{1,15}$/);",
							"});",
							"",
							"pm.test(\"Phone number is correct\", () => {",
							"    pm.expect(jsonData.user.phone).to.match(/^\\+[0-9]{11,12}$/);",
							"});",
							"",
							"pm.test(\"Response includes message\", () => {",
							"    pm.expect(jsonData).to.include.keys(\"message\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\t\n\t\"email\": \"{{userEmail}}\", \n    \"password\": \"{{userPassword}}\"\n}"
				},
				"url": {
					"raw": "{{host}}/user/login",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Password Reset Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9f7c8bb2-a02a-40a2-981b-22646665b5f2",
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Status is correct\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response includes message\", () => {",
							"    pm.expect(jsonData).to.include.keys(\"message\");",
							"});",
							"",
							"pm.test(\"Succesful message is displayed\", () => {",
							"    pm.expect(jsonData.message.type) === \"success\";",
							"});",
							"",
							"pm.test(\"Message contains guide for user\", () => {",
							"    pm.expect(jsonData.message.text.length) !== 0;",
							"});",
							"",
							"pm.test(\"Response time is less than 5000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(5000);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"{{userEmail}}\"\n}"
				},
				"url": {
					"raw": "{{host}}/user/password/reset/request",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"password",
						"reset",
						"request"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get hash",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "caae2267-ee9b-4694-8f6e-b9def4d9e4b0",
						"exec": [
							"const jsonData = pm.response.json();\r\rpm.environment.set(\"hash\", jsonData.hash);\r\rpm.test(\"Response includes hash\", () => {\r    pm.expect(jsonData).to.include.keys(\"hash\");\r});\r\rpm.test(\"Hash is displayed\", () => {\r    pm.expect(jsonData.hash.length) !== 0;\r});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/user/hash/{{userId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"hash",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Password Reset Valid(hash validation)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "426e512d-b9c5-4c93-88f4-6f2d45697ab9",
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Status is correct\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Successful message is displayed\", () => {",
							"    pm.expect(jsonData.message.type) === \"success\";",
							"});",
							"",
							"pm.test(\"Hash is valid\", () => {",
							"    pm.expect(jsonData.message.text).to.equal(\"Valid link\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"hash\": \"{{hash}}\",\n\t\"userId\": \"{{userId}}\"\n}"
				},
				"url": {
					"raw": "{{host}}/user/password/reset/valid",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"password",
						"reset",
						"valid"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Password set",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "092d901f-fee3-4ada-88a5-9d4d938e89bc",
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Status is correct\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Succesful message is displayed\", () => {",
							"   pm.expect(jsonData.message.type) === \"success\";",
							"});",
							"",
							"pm.test(\"Message contains text about password changed\", () => {",
							"    pm.expect(jsonData.message.text.length) !== 0;",
							"});",
							"",
							"pm.test(\"Response time is less than 5000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(5000);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"hash\": \"{{hash}}\",\n\t\"userId\": \"{{userId}}\",\n\t\"password\": \"{{userPassword}}\"\n}"
				},
				"url": {
					"raw": "{{host}}/user/password/reset/new",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"password",
						"reset",
						"new"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d1658cab-1aa0-4f25-9d6c-fb2a34b7c1f6",
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Status is correct\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response includes message\", () => {",
							"    pm.expect(jsonData).to.include.keys(\"message\");",
							"});",
							"",
							"pm.test(\"Response includes payload\", () => {",
							"    pm.expect(jsonData).to.include.keys(\"payload\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/user",
					"host": [
						"{{host}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get by Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9ce51983-6176-4ef1-8d86-6558cae16db9",
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Status is correct\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/user/{{userId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Self",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b43017e3-fd1b-416c-a32a-9850f723ad4e",
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Status is correct\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Successful message is displayed\", () => {",
							"    pm.expect(jsonData.message.type) === \"success\";",
							"});",
							"",
							"pm.test(\"Success is true\", () => {",
							"    pm.expect(jsonData.success) === true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"name\": \"Larisa Ovchinnikova\"\n}"
				},
				"url": {
					"raw": "{{host}}/user",
					"host": [
						"{{host}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update by Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "706e2fb3-8fe2-498e-8d5b-0dad3b6a489d",
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Status is correct\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Successful message is displayed\", () => {",
							"    pm.expect(jsonData.message.type) === \"success\";",
							"});",
							"",
							"pm.test(\"Success is true\", () => {",
							"    pm.expect(jsonData.success) === true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{userEmail}}\",\n    \"password\": \"{{userPassword}}\",\n    \"roles\": [\"admin\", \"student\"]\n}"
				},
				"url": {
					"raw": "{{host}}/user/{{userId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete by Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b2a3a648-b43f-486a-a712-bdc09b2f273b",
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Status is correct\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Successful message is displayed\", () => {",
							"    pm.expect(jsonData.message.type) === \"success\";",
							"});",
							"",
							"pm.test(\"Success is true\", () => {",
							"    pm.expect(jsonData.success) === true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/user/{{userId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"{{userId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "1d156cfc-fcd6-4789-8664-6e9788a45d5a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "23a19a63-9417-4d13-83f5-ba9c45badc29",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}